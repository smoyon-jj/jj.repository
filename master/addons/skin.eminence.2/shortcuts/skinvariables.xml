<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <variable name="Image_Widget_Poster" containers="9001" start="-10" end="10">
        <value condition="!String.IsEmpty({listitem}.Art(tvshow.poster))">$INFO[{listitem}.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty({listitem}.Art(poster))">$INFO[{listitem}.Art(poster)]</value>
        <value>$INFO[{listitem}.Icon]</value>
    </variable>

    <variable name="Image_Overlay" containers="9001" start="-10" end="10">
        <value condition="{listitem}.IsPlaying">indicator/play.png</value>
        <value condition="!Skin.HasSetting(Indicator.Resume) + {listitem}.IsResumable + Integer.IsGreater({listitem}.PercentPlayed,66)">indicator/inprogress-75.png</value>
        <value condition="!Skin.HasSetting(Indicator.Resume) + {listitem}.IsResumable + Integer.IsGreater({listitem}.PercentPlayed,33)">indicator/inprogress-50.png</value>
        <value condition="!Skin.HasSetting(Indicator.Resume) + {listitem}.IsResumable">indicator/inprogress-25.png</value>
        <value condition="!Skin.HasSetting(Indicator.Watched) + String.IsEqual({listitem}.Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
        <value condition="Skin.HasSetting(Indicator.UnwatchedEpisodes) + Integer.IsGreater({listitem}.Property(UnWatchedEpisodes),0)"></value>
        <value condition="!Skin.HasSetting(Indicator.New) + [String.StartsWith({listitem}.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [String.IsEqual(Window(Home).Property(LatestMovie.1.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.2.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.3.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.4.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.5.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.6.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.7.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.8.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.9.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.10.Title),{listitem}.Label)]] | [[Container.Content(tvshows)] + [String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),{listitem}.TvShowTitle)]] | [Container.Content(episodes) + [String.IsEqual(Window(Home).Property(LatestEpisode.1.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.2.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.3.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.4.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.5.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.6.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.7.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.8.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.9.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.10.EpisodeTitle),{listitem}.Title)]]]]">indicator/new.png</value>
        <value condition="Window.IsVisible(DialogVideoInfo.xml) + !String.IsEmpty({listitem}.DBID)">indicator/library.png</value>
        <value condition="{listitem}.IsCollection">indicator/movieset.png</value>
    </variable>
    <variable name="Image_Overlay_Corner" containers="9001" start="-10" end="10">
        <value condition="{listitem}.IsPlaying">indicator/corner.png</value>
        <value condition="!Skin.HasSetting(Indicator.Resume) + {listitem}.IsResumable + Integer.IsGreater({listitem}.PercentPlayed,66)">indicator/corner.png</value>
        <value condition="!Skin.HasSetting(Indicator.Resume) + {listitem}.IsResumable + Integer.IsGreater({listitem}.PercentPlayed,33)">indicator/corner.png</value>
        <value condition="!Skin.HasSetting(Indicator.Resume) + {listitem}.IsResumable">indicator/corner.png</value>
        <value condition="!Skin.HasSetting(Indicator.Watched) + String.IsEqual({listitem}.Overlay,OverlayWatched.png)">indicator/corner.png</value>
        <value condition="Skin.HasSetting(Indicator.UnwatchedEpisodes) + Integer.IsGreater({listitem}.Property(UnWatchedEpisodes),0)">indicator/corner.png</value>
        <value condition="!Skin.HasSetting(Indicator.New) + [String.StartsWith({listitem}.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [String.IsEqual(Window(Home).Property(LatestMovie.1.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.2.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.3.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.4.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.5.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.6.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.7.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.8.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.9.Title),{listitem}.Label) | String.IsEqual(Window(Home).Property(LatestMovie.10.Title),{listitem}.Label)]] | [[Container.Content(tvshows)] + [String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),{listitem}.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),{listitem}.TvShowTitle)]] | [Container.Content(episodes) + [String.IsEqual(Window(Home).Property(LatestEpisode.1.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.2.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.3.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.4.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.5.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.6.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.7.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.8.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.9.EpisodeTitle),{listitem}.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.10.EpisodeTitle),{listitem}.Title)]]]]">indicator/corner.png</value>
        <value condition="Window.IsVisible(DialogVideoInfo.xml) + !String.IsEmpty({listitem}.DBID)">indicator/corner.png</value>
        <value condition="{listitem}.IsCollection">indicator/corner.png</value>
    </variable>
</includes>