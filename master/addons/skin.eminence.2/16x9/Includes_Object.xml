<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="Object_RSS_Tile">
        <control type="image">
            <left>0</left>
            <posy>96r</posy>
            <width>1132</width>
            <height>96</height>
            <texture border="48">common/rss-tile-shadow.png</texture>
        </control>
        <control type="image">
            <left>0</left>
            <posy>64r</posy>
            <width>1100</width>
            <height>64</height>
            <texture border="32" colordiffuse="HomeBarBG">common/rss-tile.png</texture>
            <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent)">Conditional</animation>
        </control>
    </include>

    <include name="Object_StoreWidget">
        <param name="height" default="675" />
        <param name="landscape" default="false" />
        <param name="include_name" default="Defs_Store_Content" />
        <definition>
            <control type="group" id="99$PARAM[list_id]">
                <top>258</top>
                <height>$PARAM[height]</height>
                <include content="Object_Headline">
                    <param name="label" value="$PARAM[title]" />
                </include>
                <visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
                <control type="group">
                    <left>bigpad</left>
                    <top>bigpad</top>
                    <right>bigpad</right>
                    <height>375</height>
                    <include>Object_Background</include>
                    <control type="group">
                        <right>30</right>
                        <include content="View_Icon" condition="!$PARAM[landscape]">
                            <param name="id" value="$PARAM[list_id]" />
                            <param name="name" value="536" />
                            <param name="height" value="345" />
                            <param name="width" value="100%" />
                            <param name="orientation" value="horizontal" />
                            <param name="condition" value="true" />
                            <param name="updownid" value="false" />
                            <param name="onup" value="$PARAM[onup_id]" />
                            <param name="ondown" value="$PARAM[ondown_id]" />
                            <param name="include_name" value="$PARAM[include_name]" />
                            <param name="include_target" value="$PARAM[include_target]" />
                            <param name="include_content" value="$PARAM[include_content]" />
                            <param name="genres" value="$PARAM[genres]" />
                        </include>
                        <include content="View_IconFanart" condition="$PARAM[landscape]">
                            <param name="id" value="$PARAM[list_id]" />
                            <param name="name" value="536" />
                            <param name="height" value="345" />
                            <param name="width" value="100%" />
                            <param name="orientation" value="horizontal" />
                            <param name="condition" value="true" />
                            <param name="updownid" value="false" />
                            <param name="onup" value="$PARAM[onup_id]" />
                            <param name="ondown" value="$PARAM[ondown_id]" />
                            <param name="include_name" value="$PARAM[include_name]" />
                            <param name="include_target" value="$PARAM[include_target]" />
                            <param name="include_content" value="$PARAM[include_content]" />
                            <param name="genres" value="$PARAM[genres]" />
                        </include>
                    </control>
                </control>
            </control>
            <control type="button" id="$PARAM[list_id]">
                <height>450</height>
                <width>100%</width>
                <onfocus condition="!Integer.IsGreater(Window(Home).Property(list_focus),$PARAM[list_id])">$PARAM[ondown_id]</onfocus>
                <onfocus condition="Integer.IsGreater(Window(Home).Property(list_focus),$PARAM[list_id])">$PARAM[onup_id]</onfocus>
                <onfocus>SetProperty(list_focus,$PARAM[list_id])</onfocus>
                <onup>$PARAM[onup_id]</onup>
                <ondown>$PARAM[ondown_id]</ondown>
                <animation effect="fade" start="0" end="0" condition="true">Conditional</animation>
                <visible>!Control.IsVisible(99$PARAM[list_id])</visible>
            </control>
        </definition>
    </include>
    <include name="Object_StoreWidgets">
        <include content="Object_StoreWidget">
            <param name="list_id" value="$PARAM[widget1_id]" />
            <param name="onup_id" value="SetFocus($PARAM[widget8_id],0)" />
            <param name="ondown_id" value="SetFocus($PARAM[widget2_id],0)" />
            <param name="title" value="$PARAM[widget1_title]" />
            <param name="genres" value="$PARAM[widget1_genres]" />
            <param name="include_name" value="$PARAM[widget1_includename]" />
            <param name="include_target" value="$PARAM[widget1_target]" />
            <param name="include_content" value="$PARAM[widget1_content]" />
            <param name="landscape" value="$PARAM[widget1_landscape]" />
            <param name="height" value="$PARAM[widget1_height]" />
        </include>
        <include content="Object_StoreWidget">
            <param name="list_id" value="$PARAM[widget2_id]" />
            <param name="onup_id" value="SetFocus($PARAM[widget1_id],0)" />
            <param name="ondown_id" value="SetFocus($PARAM[widget3_id],0)" />
            <param name="title" value="$PARAM[widget2_title]" />
            <param name="genres" value="$PARAM[widget2_genres]" />
            <param name="include_name" value="$PARAM[widget2_includename]" />
            <param name="include_target" value="$PARAM[widget2_target]" />
            <param name="include_content" value="$PARAM[widget2_content]" />
            <param name="landscape" value="$PARAM[widget2_landscape]" />
            <param name="height" value="$PARAM[widget2_height]" />
        </include>
        <include content="Object_StoreWidget">
            <param name="list_id" value="$PARAM[widget3_id]" />
            <param name="onup_id" value="SetFocus($PARAM[widget2_id],0)" />
            <param name="ondown_id" value="SetFocus($PARAM[widget4_id],0)" />
            <param name="title" value="$PARAM[widget3_title]" />
            <param name="genres" value="$PARAM[widget3_genres]" />
            <param name="include_name" value="$PARAM[widget3_includename]" />
            <param name="include_target" value="$PARAM[widget3_target]" />
            <param name="include_content" value="$PARAM[widget3_content]" />
            <param name="landscape" value="$PARAM[widget3_landscape]" />
            <param name="height" value="$PARAM[widget3_height]" />
        </include>
        <include content="Object_StoreWidget">
            <param name="list_id" value="$PARAM[widget4_id]" />
            <param name="onup_id" value="SetFocus($PARAM[widget3_id],0)" />
            <param name="ondown_id" value="SetFocus($PARAM[widget5_id],0)" />
            <param name="title" value="$PARAM[widget4_title]" />
            <param name="genres" value="$PARAM[widget4_genres]" />
            <param name="include_name" value="$PARAM[widget4_includename]" />
            <param name="include_target" value="$PARAM[widget4_target]" />
            <param name="include_content" value="$PARAM[widget4_content]" />
            <param name="landscape" value="$PARAM[widget4_landscape]" />
            <param name="height" value="$PARAM[widget4_height]" />
        </include>
        <include content="Object_StoreWidget">
            <param name="list_id" value="$PARAM[widget5_id]" />
            <param name="onup_id" value="SetFocus($PARAM[widget4_id],0)" />
            <param name="ondown_id" value="SetFocus($PARAM[widget6_id],0)" />
            <param name="title" value="$PARAM[widget5_title]" />
            <param name="genres" value="$PARAM[widget5_genres]" />
            <param name="include_name" value="$PARAM[widget5_includename]" />
            <param name="include_target" value="$PARAM[widget5_target]" />
            <param name="include_content" value="$PARAM[widget5_content]" />
            <param name="landscape" value="$PARAM[widget5_landscape]" />
            <param name="height" value="$PARAM[widget5_height]" />
        </include>
        <include content="Object_StoreWidget">
            <param name="list_id" value="$PARAM[widget6_id]" />
            <param name="onup_id" value="SetFocus($PARAM[widget5_id],0)" />
            <param name="ondown_id" value="SetFocus($PARAM[widget7_id],0)" />
            <param name="title" value="$PARAM[widget6_title]" />
            <param name="genres" value="$PARAM[widget6_genres]" />
            <param name="include_name" value="$PARAM[widget6_includename]" />
            <param name="include_target" value="$PARAM[widget6_target]" />
            <param name="include_content" value="$PARAM[widget6_content]" />
            <param name="landscape" value="$PARAM[widget6_landscape]" />
            <param name="height" value="$PARAM[widget6_height]" />
        </include>
        <include content="Object_StoreWidget">
            <param name="list_id" value="$PARAM[widget7_id]" />
            <param name="onup_id" value="SetFocus($PARAM[widget6_id],0)" />
            <param name="ondown_id" value="SetFocus($PARAM[widget8_id],0)" />
            <param name="title" value="$PARAM[widget7_title]" />
            <param name="genres" value="$PARAM[widget7_genres]" />
            <param name="include_name" value="$PARAM[widget7_includename]" />
            <param name="include_target" value="$PARAM[widget7_target]" />
            <param name="include_content" value="$PARAM[widget7_content]" />
            <param name="landscape" value="$PARAM[widget7_landscape]" />
            <param name="height" value="$PARAM[widget7_height]" />
        </include>
        <include content="Object_StoreWidget">
            <param name="list_id" value="$PARAM[widget8_id]" />
            <param name="onup_id" value="SetFocus($PARAM[widget7_id],0)" />
            <param name="ondown_id" value="SetFocus($PARAM[widget1_id],0)" />
            <param name="title" value="$PARAM[widget8_title]" />
            <param name="genres" value="$PARAM[widget8_genres]" />
            <param name="include_name" value="$PARAM[widget8_includename]" />
            <param name="include_target" value="$PARAM[widget8_target]" />
            <param name="include_content" value="$PARAM[widget8_content]" />
            <param name="landscape" value="$PARAM[widget8_landscape]" />
            <param name="height" value="$PARAM[widget8_height]" />
            
        </include>
    </include>

    <include name="Object_HomeWidgetPoster">
        <control type="group">
            <width>220</width>
            <height>320</height>
            <visible>[!String.IsEmpty(Container(9001).ListItem($PARAM[id]).Art(poster)) | !String.IsEmpty(Container(9001).ListItem($PARAM[id]).Art(tvshow.poster))] + [String.IsEqual(Container(9001).ListItem($PARAM[id]).DBType,episode) | String.IsEqual(Container(9001).ListItem($PARAM[id]).DBType,tvshow) | String.IsEqual(Container(9001).ListItem($PARAM[id]).DBType,season) | String.IsEqual(Container(9001).ListItem($PARAM[id]).DBType,set) | String.IsEqual(Container(9001).ListItem($PARAM[id]).DBType,movie)]</visible>
            <control type="image">
                <centerleft>50%</centerleft>
                <width>220</width>
                <bottom>0</bottom>
                <top>0</top>
                <bordertexture colordiffuse="$VAR[HighlightColor]">common/white.png</bordertexture>
                <bordersize>10</bordersize>
                <aspectratio>scale</aspectratio>
                <texture fallback="DefaultWidgetVideo.png">$VAR[Image_Widget_Poster_C9001_$PARAM[id]]</texture>
                <visible>[Control.HasFocus(9001) | Control.HasFocus(9101)]</visible>
                <visible>$PARAM[focuseditem]</visible>
            </control>
            <control type="group">
                <centerleft>50%</centerleft>
                <top>pad</top>
                <bottom>pad</bottom>
                <width>200</width>
                <control type="image">
                    <aspectratio>scale</aspectratio>
                    <include condition="!Skin.HasSetting(global.hideobjectshadows) + !String.IsEqual(Skin.CurrentColourTheme,Light)">Object_Background_Shadows</include>
                    <texture fallback="DefaultWidgetVideo.png">$VAR[Image_Widget_Poster_C9001_$PARAM[id]]</texture>
                    <visible>!$PARAM[focuseditem] | ![Control.HasFocus(9001) | Control.HasFocus(9101)]</visible>
                </control>
            </control>
            <include content="Defs_WatchedOverlay">
                <param name="pos" value="$PARAM[id]" />
                <param name="affix" value="_C9001" />
                <param name="container" value="Container(9001)." />
            </include>
        </control>
        <control type="group">
            <width>220</width>
            <height>320</height>
            <visible>![[!String.IsEmpty(Container(9001).ListItem($PARAM[id]).Art(poster)) | !String.IsEmpty(Container(9001).ListItem($PARAM[id]).Art(tvshow.poster))] + [String.IsEqual(Container(9001).ListItem($PARAM[id]).DBType,episode) | String.IsEqual(Container(9001).ListItem($PARAM[id]).DBType,tvshow) | String.IsEqual(Container(9001).ListItem($PARAM[id]).DBType,season) | String.IsEqual(Container(9001).ListItem($PARAM[id]).DBType,set) | String.IsEqual(Container(9001).ListItem($PARAM[id]).DBType,movie)]]</visible>
            <control type="image">
                <centerleft>50%</centerleft>
                <width>220</width>
                <bottom>0</bottom>
                <top>0</top>
                <bordertexture colordiffuse="$VAR[HighlightColor]">common/white.png</bordertexture>
                <bordersize>10</bordersize>
                <aspectratio>keep</aspectratio>
                <texture fallback="DefaultWidgetVideo.png">$VAR[Image_Widget_Poster_C9001_$PARAM[id]]</texture>
                <visible>[Control.HasFocus(9001) | Control.HasFocus(9101)]</visible>
                <visible>$PARAM[focuseditem]</visible>
            </control>
            <control type="group">
                <centerleft>50%</centerleft>
                <top>pad</top>
                <bottom>pad</bottom>
                <width>200</width>
                <control type="image">
                    <aspectratio>keep</aspectratio>
                    <include condition="!Skin.HasSetting(global.hideobjectshadows) + !String.IsEqual(Skin.CurrentColourTheme,Light)">Object_Background_Shadows</include>
                    <texture fallback="DefaultWidgetVideo.png">$VAR[Image_Widget_Poster_C9001_$PARAM[id]]</texture>
                    <visible>!$PARAM[focuseditem] | ![Control.HasFocus(9001) | Control.HasFocus(9101)]</visible>
                </control>
            </control>
        </control>
    </include>
    <include name="Object_Arrows_Vertical">
        <description>Nothing For Now</description>
        <!-- <control type="group">
            <visible>![Window.IsVisible(DialogPVRRecordingInfo.xml) | Window.IsVisible(DialogPVRGuideInfo.xml) | Window.IsVisible(DialogSongInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogAddonInfo.xml)]</visible>
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>
            <control type="image">
                <top>-18</top>
                <centerleft>50%</centerleft>
                <width>16</width>
                <height>16</height>
                <texture flipy="true" colordiffuse="ListLabel">common/16-arrow-down.png</texture>
                <visible>Container.HasPrevious</visible>
            </control>
            <control type="image">
                <bottom>-18</bottom>
                <centerleft>50%</centerleft>
                <width>16</width>
                <height>16</height>
                <texture flipy="false" colordiffuse="ListLabel">common/16-arrow-down.png</texture>
                <visible>Container.HasNext</visible>
            </control>
        </control> -->
    </include>

    <include name="Object_BasicViewList">
        <!-- View by (Hidden) -->
        <control type="button" id="2">
            <include condition="!Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2_Horz</include>
            <include condition="Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2</include>
            <visible>false</visible>
        </control>

        <!-- Skin Helper View Mode Selector -->
        <control type="radiobutton" id="9978">
            <label>$INFO[Control.GetLabel(2)]</label>
            <textureradioonfocus colordiffuse="Selected">indicator/lock.png</textureradioonfocus>
            <textureradioonnofocus colordiffuse="ListLabel">indicator/lock.png</textureradioonnofocus>
            <textureradioondisabled colordiffuse="Disabled">indicator/lock.png</textureradioondisabled>
            <textureradioofffocus />
            <textureradiooffnofocus />
            <textureradiooffdisabled />
            
            <include condition="!Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2_Horz</include>
            <include condition="Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2</include>

            <onclick condition="[Container.Content() + !String.IsEmpty(Skin.String(Skin.ForcedView.))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(tags) + !String.IsEmpty(Skin.String(Skin.ForcedView.tags))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(years) + !String.IsEmpty(Skin.String(Skin.ForcedView.years))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(genres) + !String.IsEmpty(Skin.String(Skin.ForcedView.genres))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(countries) + !String.IsEmpty(Skin.String(Skin.ForcedView.countries))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(studios) + !String.IsEmpty(Skin.String(Skin.ForcedView.studios))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(playlists) + !String.IsEmpty(Skin.String(Skin.ForcedView.playlists))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(movies) + !String.IsEmpty(Skin.String(Skin.ForcedView.movies))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(sets) + !String.IsEmpty(Skin.String(Skin.ForcedView.sets))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(tvshows) + !String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(seasons) + !String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(episodes) + !String.IsEmpty(Skin.String(Skin.ForcedView.episodes))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(artists) + !String.IsEmpty(Skin.String(Skin.ForcedView.artists))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(albums) + !String.IsEmpty(Skin.String(Skin.ForcedView.albums))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(songs) + !String.IsEmpty(Skin.String(Skin.ForcedView.songs))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(musicvideos) + !String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(addons) + !String.IsEmpty(Skin.String(Skin.ForcedView.addons))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(actors) + !String.IsEmpty(Skin.String(Skin.ForcedView.actors))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(directors) + !String.IsEmpty(Skin.String(Skin.ForcedView.directors))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(files) + !String.IsEmpty(Skin.String(Skin.ForcedView.files))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(mixed) + !String.IsEmpty(Skin.String(Skin.ForcedView.mixed))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(images) + !String.IsEmpty(Skin.String(Skin.ForcedView.images))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(games) + !String.IsEmpty(Skin.String(Skin.ForcedView.games))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(unknown) + !String.IsEmpty(Skin.String(Skin.ForcedView.unknown))]">ActivateWindow(1121)</onclick>
            <onclick condition="[Container.Content(videos) + !String.IsEmpty(Skin.String(Skin.ForcedView.videos))]">ActivateWindow(1121)</onclick>

            <onclick condition="[Container.Content() + String.IsEmpty(Skin.String(Skin.ForcedView.))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(tags) + String.IsEmpty(Skin.String(Skin.ForcedView.tags))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(years) + String.IsEmpty(Skin.String(Skin.ForcedView.years))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(genres) + String.IsEmpty(Skin.String(Skin.ForcedView.genres))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(countries) + String.IsEmpty(Skin.String(Skin.ForcedView.countries))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(studios) + String.IsEmpty(Skin.String(Skin.ForcedView.studios))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(playlists) + String.IsEmpty(Skin.String(Skin.ForcedView.playlists))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(movies) + String.IsEmpty(Skin.String(Skin.ForcedView.movies))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(sets) + String.IsEmpty(Skin.String(Skin.ForcedView.sets))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(tvshows) + String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(seasons) + String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(episodes) + String.IsEmpty(Skin.String(Skin.ForcedView.episodes))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(artists) + String.IsEmpty(Skin.String(Skin.ForcedView.artists))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(albums) + String.IsEmpty(Skin.String(Skin.ForcedView.albums))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(songs) + String.IsEmpty(Skin.String(Skin.ForcedView.songs))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(musicvideos) + String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(addons) + String.IsEmpty(Skin.String(Skin.ForcedView.addons))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(actors) + String.IsEmpty(Skin.String(Skin.ForcedView.actors))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(directors) + String.IsEmpty(Skin.String(Skin.ForcedView.directors))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(files) + String.IsEmpty(Skin.String(Skin.ForcedView.files))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(mixed) + String.IsEmpty(Skin.String(Skin.ForcedView.mixed))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(images) + String.IsEmpty(Skin.String(Skin.ForcedView.images))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(games) + String.IsEmpty(Skin.String(Skin.ForcedView.games))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(unknown) + String.IsEmpty(Skin.String(Skin.ForcedView.unknown))]">ActivateWindow(1110)</onclick>
            <onclick condition="[Container.Content(videos) + String.IsEmpty(Skin.String(Skin.ForcedView.videos))]">ActivateWindow(1110)</onclick>
            
            <selected>[Container.Content() + !String.IsEmpty(Skin.String(Skin.ForcedView.))] | [Container.Content(tags) + !String.IsEmpty(Skin.String(Skin.ForcedView.tags))] | [Container.Content(years) + !String.IsEmpty(Skin.String(Skin.ForcedView.years))] | [Container.Content(genres) + !String.IsEmpty(Skin.String(Skin.ForcedView.genres))] | [Container.Content(countries) + !String.IsEmpty(Skin.String(Skin.ForcedView.countries))] | [Container.Content(studios) + !String.IsEmpty(Skin.String(Skin.ForcedView.studios))] | [Container.Content(playlists) + !String.IsEmpty(Skin.String(Skin.ForcedView.playlists))] | [Container.Content(movies) + !String.IsEmpty(Skin.String(Skin.ForcedView.movies))] | [Container.Content(sets) + !String.IsEmpty(Skin.String(Skin.ForcedView.sets))] | [Container.Content(tvshows) + !String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))] | [Container.Content(seasons) + !String.IsEmpty(Skin.String(Skin.ForcedView.seasons))] | [Container.Content(episodes) + !String.IsEmpty(Skin.String(Skin.ForcedView.episodes))] | [Container.Content(artists) + !String.IsEmpty(Skin.String(Skin.ForcedView.artists))] | [Container.Content(albums) + !String.IsEmpty(Skin.String(Skin.ForcedView.albums))] | [Container.Content(songs) + !String.IsEmpty(Skin.String(Skin.ForcedView.songs))] | [Container.Content(musicvideos) + !String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))] | [Container.Content(addons) + !String.IsEmpty(Skin.String(Skin.ForcedView.addons))] | [Container.Content(actors) + !String.IsEmpty(Skin.String(Skin.ForcedView.actors))] | [Container.Content(directors) + !String.IsEmpty(Skin.String(Skin.ForcedView.directors))] | [Container.Content(files) + !String.IsEmpty(Skin.String(Skin.ForcedView.files))] | [Container.Content(mixed) + !String.IsEmpty(Skin.String(Skin.ForcedView.mixed))] | [Container.Content(images) + !String.IsEmpty(Skin.String(Skin.ForcedView.images))] | [Container.Content(games) + !String.IsEmpty(Skin.String(Skin.ForcedView.games))] | [Container.Content(unknown) + !String.IsEmpty(Skin.String(Skin.ForcedView.unknown))] | [Container.Content(videos) + !String.IsEmpty(Skin.String(Skin.ForcedView.videos))]</selected>
            <visible>Control.IsEnabled(2)</visible>
        </control>

        <!-- Sort by -->
        <control type="button" id="3">
            <include condition="!Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2_Horz</include>
            <include condition="Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2</include>
            <label>103</label>
            <visible>Control.IsEnabled(3)</visible>
        </control>
        
        <!-- Sort ascending/descending -->
        <control type="togglebutton" id="4">
            <include condition="!Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2_Horz</include>
            <include condition="Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2</include>
            <label>584</label>
            <altlabel>585</altlabel>
            <usealttexture>Container.SortDirection(Descending)</usealttexture>
            <visible>Control.IsEnabled(3)</visible>
            <visible>Control.IsEnabled(4)</visible>
        </control>
        <!-- Now Playing -->
        <control type="button" id="9098">
            <include condition="!Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2_Horz</include>
            <include condition="Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2</include>
            <label>13350</label>
            <onclick condition="Integer.IsGreater(Playlist.Length(music),0)">ActivateWindow(MusicPlaylist)</onclick>
            <onclick condition="Integer.IsGreater(Playlist.Length(video),0)">ActivateWindow(VideoPlaylist)</onclick>
            <visible>Integer.IsGreater(Playlist.Length(music),0) | Integer.IsGreater(Playlist.Length(video),0)</visible>
        </control>
        <!-- Fullscreen -->
        <control type="button" id="9099">
            <include condition="!Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2_Horz</include>
            <include condition="Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2</include>
            <label>$VAR[Label_FullscreenButton]</label>
            <visible>Player.HasMedia</visible>
            <onclick>Fullscreen</onclick>
            <visible>Control.IsEnabled(9099)</visible>
        </control>

        <!-- Update -->
        <control type="button" id="9092">
            <label>$LOCALIZE[10140]</label>
            <include condition="!Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2_Horz</include>
            <include condition="Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2</include>
            <onclick>Addon.OpenSettings($INFO[Container.PluginName])</onclick>
            <visible>!String.IsEmpty(Container.PluginName)</visible>
            <visible>!Skin.HasSetting(KioskMode)</visible>
        </control>
    </include>

    <include name="Object_BasicViewList_PVR">
        <!-- View by -->
        <control type="button" id="2">
            <include condition="!Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2_Horz</include>
            <include condition="Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2</include>
            <!-- <label>103</label> -->
            <visible>Control.IsEnabled(2)</visible>
        </control>

        <!-- Sort by -->
        <control type="button" id="3">
            <include condition="!Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2_Horz</include>
            <include condition="Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2</include>
            <label>103</label>
            <visible>Control.IsEnabled(3)</visible>
        </control>
        
        <!-- Sort ascending/descending -->
        <control type="togglebutton" id="4">
            <include condition="!Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2_Horz</include>
            <include condition="Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2</include>
            <label>584</label>
            <altlabel>585</altlabel>
            <usealttexture>Container.SortDirection(Descending)</usealttexture>
            <visible>Control.IsEnabled(3)</visible>
            <visible>Control.IsEnabled(4)</visible>
        </control>
        <!-- Now Playing -->
        <control type="button" id="9098">
            <include condition="!Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2_Horz</include>
            <include condition="Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2</include>
            <label>13350</label>
            <onclick condition="Integer.IsGreater(Playlist.Length(music),0)">ActivateWindow(MusicPlaylist)</onclick>
            <onclick condition="Integer.IsGreater(Playlist.Length(video),0)">ActivateWindow(VideoPlaylist)</onclick>
            <visible>Integer.IsGreater(Playlist.Length(music),0) | Integer.IsGreater(Playlist.Length(video),0)</visible>
        </control>
        <!-- Fullscreen -->
        <control type="button" id="9099">
            <include condition="!Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2_Horz</include>
            <include condition="Skin.HasSetting(HorizontalMenus)">Defs_OptionButton2</include>
            <label>$VAR[Label_FullscreenButton]</label>
            <visible>Player.HasMedia</visible>
            <onclick>Fullscreen</onclick>
            <visible>Control.IsEnabled(9099)</visible>
        </control>
    </include>

    <include name="Object_WeatherOutlook">
        <definition>
            <control type="group">
                <width>200</width>
                <height>340</height>
                <control type="label">
                    <font>Font-ListInfo-Small-Bold</font>
                    <height>90</height>
                    <label>$PARAM[dayname]</label>
                    <centerleft>50%</centerleft>
                    <align>center</align>
                </control>
                <control type="image">
                    <centertop>50%</centertop>
                    <height>200</height>
                    <width>200</width>
                    <aspectratio>keep</aspectratio>
                    <texture>$INFO[Skin.String(weather.icons.path),,/]$INFO[Window(weather).Property($PARAM[day].FanartCode),,.png]</texture>
                    <visible>!String.IsEmpty(Skin.String(weather.icons.path))</visible>
                </control>
                <control type="image">
                    <centertop>50%</centertop>
                    <height>200</height>
                    <width>200</width>
                    <aspectratio>keep</aspectratio>
                    <texture>$INFO[Window(weather).Property($PARAM[day].OutlookIcon)]</texture>
                    <visible>String.IsEmpty(Skin.String(weather.icons.path))</visible>
                </control>
                <control type="label">
                    <font>Font-ListInfo-Small</font>
                    <bottom>0</bottom>
                    <height>90</height>
                    <label>[B]$INFO[Window(weather).Property($PARAM[day].HighTemp)]$INFO[System.TemperatureUnits][/B]  $INFO[Window(weather).Property($PARAM[day].LowTemp)]$INFO[System.TemperatureUnits]</label>
                    <centerleft>50%</centerleft>
                    <align>center</align>
                </control>
            </control>
        </definition>
    </include>

    <include name="Object_Alphabet_Horz_ItemGap_Wide">
        <itemgap>6</itemgap>
    </include>

    <include name="Object_Alphabet_Horz">
        <param name="id" default="63" />
        <param name="visible" default="true" />
        <definition>
            <control type="button" id="$PARAM[id]">
                <centertop>50%</centertop>
                <visible>$PARAM[visible]</visible>
                <font />
                <texturefocus />
                <texturenofocus />
                <height>44</height>
                <ondown condition="!String.IsEqual(Window(home).Property(HubReturn),Home)">ActivateWindow($INFO[Window(home).Property(HubReturn)])</ondown>
                <onup>61</onup>
                <onback>50</onback>
                <onright>SetFocus(50)</onright>
                <onright>Action(nextletter)</onright>
                <!-- <onright condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(jumpsms2)</onright>
                <onright condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</onright>
                <onright condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</onright>
                <onright condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</onright> -->
                <onright>SetFocus($PARAM[id])</onright>
                <onleft>SetFocus(50)</onleft>
                <onleft>Action(prevletter)</onleft>
                <!-- <onleft condition="!Container.HasPrevious | !$EXP[Exp_SortLetterIsAlphabet]">Action(jumpsms9)</onleft>
                <onleft condition="!Container.HasPrevious | !$EXP[Exp_SortLetterIsAlphabet]">Action(nextletter)</onleft>
                <onleft condition="!Container.HasPrevious | !$EXP[Exp_SortLetterIsAlphabet]">Action(nextletter)</onleft>
                <onleft condition="!Container.HasPrevious | !$EXP[Exp_SortLetterIsAlphabet]">Action(nextletter)</onleft> -->
                <onleft>SetFocus($PARAM[id])</onleft>
            </control>

            <control type="grouplist">
                <centertop>50%</centertop>
                <height>44</height>
                <visible>$PARAM[visible]</visible>
                <include condition="Skin.HasSetting(global.widescreen)">Object_Alphabet_Horz_ItemGap_Wide</include>
                <itemgap>1</itemgap>
                <orientation>horizontal</orientation>
                <include content="Object_AlphabetNumber">
                    <param name="id" value="$PARAM[id]" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="A" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="B" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="C" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="D" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="E" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="F" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="G" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="H" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="I" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="J" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="K" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="L" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="M" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="N" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="O" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="P" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="Q" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="R" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="S" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="T" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="U" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="V" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="W" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="X" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="Y" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="Z" />
                </include>
                <animation effect="fade" condition="!Control.HasFocus(61) + !Control.HasFocus($PARAM[id]) + !Container.Scrolling" time="200" start="100" end="0">Conditional</animation>
            </control>
        </definition>
    </include>

    <include name="Object_Alphabet_Vert">
        <param name="id" default="62" />
        <param name="visible" default="true" />
        <definition>
            <control type="button" id="$PARAM[id]">
                <centerleft>50%</centerleft>
                <visible>$PARAM[visible]</visible>
                <font />
                <texturefocus />
                <texturenofocus />
                <width>64</width>
                <onleft condition="!String.IsEqual(Window(home).Property(HubReturn),Home)">ActivateWindow($INFO[Window(home).Property(HubReturn)])</onleft>
                <onright>60</onright>
                <onback>50</onback>
                <ondown>SetFocus(50)</ondown>
                <ondown condition="Container.HasNext">Action(nextletter)</ondown>
                <!-- <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(jumpsms2)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown> -->
                <ondown>SetFocus($PARAM[id])</ondown>
                <onup>SetFocus(50)</onup>
                <onup>Action(prevletter)</onup>
                <!-- <onup condition="!Container.HasPrevious | !$EXP[Exp_SortLetterIsAlphabet]">Action(jumpsms9)</onup>
                <onup condition="!Container.HasPrevious | !$EXP[Exp_SortLetterIsAlphabet]">Action(nextletter)</onup>
                <onup condition="!Container.HasPrevious | !$EXP[Exp_SortLetterIsAlphabet]">Action(nextletter)</onup>
                <onup condition="!Container.HasPrevious | !$EXP[Exp_SortLetterIsAlphabet]">Action(nextletter)</onup> -->
                <onup>SetFocus($PARAM[id])</onup>
            </control>

            <control type="grouplist">
                <centerleft>50%</centerleft>
                <width>64</width>
                <visible>$PARAM[visible]</visible>
                <itemgap>8</itemgap>
                <orientation>vertical</orientation>
                <include content="Object_AlphabetNumber">
                    <param name="id" value="$PARAM[id]" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="A" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="B" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="C" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="D" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="E" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="F" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="G" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="H" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="I" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="J" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="K" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="L" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="M" />
                </include>
                <visible>![String.IsEqual(ListItem.SortLetter,N) | String.IsEqual(ListItem.SortLetter,O) | String.IsEqual(ListItem.SortLetter,P) | String.IsEqual(ListItem.SortLetter,Q) | String.IsEqual(ListItem.SortLetter,R) | String.IsEqual(ListItem.SortLetter,S) | String.IsEqual(ListItem.SortLetter,T) | String.IsEqual(ListItem.SortLetter,U) | String.IsEqual(ListItem.SortLetter,V) | String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]</visible>
                <animation effect="fade" condition="!Control.HasFocus(60) + !Control.HasFocus($PARAM[id]) + !Container.Scrolling" time="200" start="100" end="0">Conditional</animation>
            </control>
            <control type="grouplist">
                <centerleft>50%</centerleft>
                <width>64</width>
                <visible>$PARAM[visible]</visible>
                <itemgap>8</itemgap>
                <orientation>vertical</orientation>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="M" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="N" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="O" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="P" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="Q" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="R" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="S" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="T" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="U" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="V" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="W" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="X" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="Y" />
                </include>
                <include content="Object_AlphabetLetter">
                    <param name="id" value="$PARAM[id]" />
                    <param name="label" value="Z" />
                </include>
                <visible>String.IsEqual(ListItem.SortLetter,N) | String.IsEqual(ListItem.SortLetter,O) | String.IsEqual(ListItem.SortLetter,P) | String.IsEqual(ListItem.SortLetter,Q) | String.IsEqual(ListItem.SortLetter,R) | String.IsEqual(ListItem.SortLetter,S) | String.IsEqual(ListItem.SortLetter,T) | String.IsEqual(ListItem.SortLetter,U) | String.IsEqual(ListItem.SortLetter,V) | String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)</visible>
                <animation effect="fade" condition="!Control.HasFocus(60) + !Control.HasFocus($PARAM[id]) + !Container.Scrolling" time="200" start="100" end="0">Conditional</animation>
            </control>
        </definition>
    </include>

    <include name="Object_AlphabetLetter_NF">
        <control type="label">
            <width>64</width>
            <height>44</height>
            <label>$PARAM[label]</label>
            <align>center</align>
            <aligny>center</aligny>
            <textcolor>Disabled</textcolor>
            <font>Font-ListInfo-Small</font>
            <visible>$PARAM[visible]</visible>
        </control>
    </include>
    <include name="Object_AlphabetLetter_FO">
        <control type="label">
            <width>64</width>
            <height>44</height>
            <label>[B]$PARAM[label][/B]</label>
            <align>center</align>
            <aligny>center</aligny>
            <textcolor>SideArrow</textcolor>
            <font>Font-Button</font>
            <visible>$PARAM[visible]</visible>
            <visible>!Control.HasFocus($PARAM[id])</visible>
        </control>
        <control type="label">
            <width>64</width>
            <height>44</height>
            <label>[B]$PARAM[label][/B]</label>
            <align>center</align>
            <aligny>center</aligny>
            <textcolor>$VAR[HighlightColor2]</textcolor>
            <font>Font-Button</font>
            <visible>$PARAM[visible]</visible>
            <visible>Control.HasFocus($PARAM[id])</visible>
        </control>
    </include>

    <include name="Object_AlphabetLetter">
        <include content="Object_AlphabetLetter_NF">
            <param name="label" value="$PARAM[label]" />
            <param name="visible" value="!String.IsEqual(ListItem.SortLetter,$PARAM[label])" />
        </include>
        <include content="Object_AlphabetLetter_FO">
            <param name="label" value="$PARAM[label]" />
            <param name="id" value="$PARAM[id]" />
            <param name="visible" value="String.IsEqual(ListItem.SortLetter,$PARAM[label])" />
        </include>
    </include>

    <include name="Object_AlphabetNumber">
        <include content="Object_AlphabetLetter_NF">
            <param name="label" value="#" />
            <param name="visible" value="$EXP[Exp_SortLetterIsAlphabet]" />
        </include>
        <include content="Object_AlphabetLetter_FO">
            <param name="label" value="#" />
            <param name="visible" value="!$EXP[Exp_SortLetterIsAlphabet]" />
        </include>
    </include>


    <include name="Object_Scrollbar">
        <param name="left" default="0" />
        <param name="visible" default="true" />
        <definition>
            <control type="scrollbar" id="60">
                <onleft condition="Skin.HasSetting(furniture.alphabet) + !Skin.HasSetting(global.widescreen) + $EXP[Object_Alphabet_Enabled]">62</onleft>
                <onleft condition="Skin.HasSetting(furniture.alphabet) + Skin.HasSetting(global.widescreen) + $EXP[Object_Alphabet_Enabled]">63</onleft>
                <onleft condition="!String.IsEqual(Window(home).Property(HubReturn),Home) + [!Skin.HasSetting(furniture.alphabet) | !$EXP[Object_Alphabet_Enabled]]">ActivateWindow($INFO[Window(home).Property(HubReturn)])</onleft>

                <left>$PARAM[left]</left>
                <height>100%</height>
                <onright>50</onright>
                <width>8</width>
                <orientation>vertical</orientation>
                <animation effect="fade" condition="!Control.HasFocus(60) + !Container.Scrolling" time="200" start="100" end="0">Conditional</animation>
                <visible>$PARAM[visible]</visible>
            </control>
        </definition>
    </include>
    <include name="Object_Scrollbar_Horizontal">
        <param name="visible" default="true" />
        <definition>
            <control type="scrollbar" id="61">
                <ondown condition="Skin.HasSetting(furniture.alphabet) + Skin.HasSetting(furniture.showflags) + $EXP[Object_Alphabet_Enabled]">62</ondown>
                <ondown condition="Skin.HasSetting(furniture.alphabet) + !Skin.HasSetting(furniture.showflags) + $EXP[Object_Alphabet_Enabled]">63</ondown>
                <ondown condition="!String.IsEqual(Window(home).Property(HubReturn),Home) + [!Skin.HasSetting(furniture.alphabet) | !$EXP[Object_Alphabet_Enabled]]">ActivateWindow($INFO[Window(home).Property(HubReturn)])</ondown>
                <onup>50</onup>
                <bottom>0</bottom>
                <orientation>horizontal</orientation>
                <centerleft>50%</centerleft>
                <width>headlinew</width>
                <height>8</height>
                <animation effect="fade" condition="!Control.HasFocus(61) + !Container.Scrolling" time="200" start="100" end="0">Conditional</animation>
                <visible>$PARAM[visible]</visible>
            </control>
        </definition>
    </include>

    <expression name="Object_Alphabet_Enabled">[[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558])] + Integer.IsGreater(Container.NumPages,1)]</expression>

    <include name="Object_View_Scrollbars">
        <control type="group">
            <left>bigpad</left>
            <right>bigpad</right>
            <top>bigpad</top>
            <height>posterh</height>
            <control type="group">
                <left>-84</left>
                <width>80</width>
                <include content="Object_Alphabet_Vert" condition="Skin.HasSetting(furniture.alphabet) + !Skin.HasSetting(global.widescreen)">
                    <param name="visible" value="[[Skin.HasSetting(furniture.showflags) + [Control.IsVisible(52) | Control.IsVisible(525) | Control.IsVisible(58) | Control.IsVisible(535)]] | [Control.IsVisible(50) | Control.IsVisible(550) | Control.IsVisible(552) | Control.IsVisible(510) | Control.IsVisible(51) | Control.IsVisible(57) | Control.IsVisible(577) | Control.IsVisible(53) | Control.IsVisible(553) | Control.IsVisible(54) | Control.IsVisible(500) | Control.IsVisible(59) | Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(56)]] + $EXP[Object_Alphabet_Enabled]" />
                </include>
            </control>
            <control type="group">
                <bottom>-80</bottom>
                <height>80</height>
                <include content="Object_Alphabet_Horz" condition="Skin.HasSetting(furniture.alphabet) + !Skin.HasSetting(furniture.showflags)">
                    <param name="visible" value="[[Control.IsVisible(52) | Control.IsVisible(525) | Control.IsVisible(58) | Control.IsVisible(535)] | [Skin.HasSetting(global.widescreen) + [Control.IsVisible(50) | Control.IsVisible(550) | Control.IsVisible(552) | Control.IsVisible(510) | Control.IsVisible(51) | Control.IsVisible(57) | Control.IsVisible(577) | Control.IsVisible(53) | Control.IsVisible(553) | Control.IsVisible(54) | Control.IsVisible(500) | Control.IsVisible(59) | Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(56)]]] + $EXP[Object_Alphabet_Enabled]" />
                </include>
            </control>
            <include content="Object_Scrollbar">
                <param name="visible" value="Control.IsVisible(50) | Control.IsVisible(550) | Control.IsVisible(552) | Control.IsVisible(510) | Control.IsVisible(51) | Control.IsVisible(57) | Control.IsVisible(577) | Control.IsVisible(53) | Control.IsVisible(553) | Control.IsVisible(54) | Control.IsVisible(500) | Control.IsVisible(59) | Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(56)" />
            </include>
            <include content="Object_Scrollbar_Horizontal">
                <param name="visible" value="Control.IsVisible(52) | Control.IsVisible(525) | Control.IsVisible(58) | Control.IsVisible(535)" />
            </include>
        </control>
    </include>

    <include name="Object_Background_Shadows_BorderTexture">
        <bordertexture border="32">common/24-shadow.png</bordertexture>
    </include>
    <include name="Object_Background_Shadows">
        <top>-24</top>
        <bottom>-24</bottom>
        <left>-24</left>
        <right>-24</right>
        <bordertexture border="32">common/24-shadow.png</bordertexture>
        <bordersize>24</bordersize>
    </include>
    <include name="Object_Background">
        <control type="image">
            <texture colordiffuse="Background">common/white.png</texture>
            <animation effect="fade" start="100" end="80" condition="!Skin.HasSetting(background.hidefanart) + String.IsEqual(Skin.String(fanart.opacity),10)">Conditional</animation>
            <animation effect="fade" start="100" end="70" condition="!Skin.HasSetting(background.hidefanart) + String.IsEqual(Skin.String(fanart.opacity),20)">Conditional</animation>
            <animation effect="fade" start="100" end="60" condition="!Skin.HasSetting(background.hidefanart) + String.IsEqual(Skin.String(fanart.opacity),30)">Conditional</animation>
            <animation effect="fade" start="100" end="50" condition="!Skin.HasSetting(background.hidefanart) + String.IsEqual(Skin.String(fanart.opacity),40)">Conditional</animation>
            <animation effect="fade" start="100" end="40" condition="!Skin.HasSetting(background.hidefanart) + String.IsEqual(Skin.String(fanart.opacity),50)">Conditional</animation>
            <animation effect="fade" start="100" end="30" condition="!Skin.HasSetting(background.hidefanart) + String.IsEqual(Skin.String(fanart.opacity),60)">Conditional</animation>
            <animation effect="fade" start="100" end="20" condition="!Skin.HasSetting(background.hidefanart) + String.IsEqual(Skin.String(fanart.opacity),70)">Conditional</animation>
            <animation effect="fade" start="100" end="10" condition="!Skin.HasSetting(background.hidefanart) + String.IsEqual(Skin.String(fanart.opacity),80)">Conditional</animation>
            <visible>!Skin.HasSetting(background.hidefanart) + Integer.IsLess(Skin.String(fanart.opacity),90) + !String.IsEmpty(Skin.String(fanart.opacity))</visible>
        </control>
        <control type="image">
            <include condition="!Skin.HasSetting(global.hideobjectshadows) + !String.IsEqual(Skin.CurrentColourTheme,Light)">Object_Background_Shadows</include>
            <texture colordiffuse="ObjectBackground">common/white.png</texture>
        </control>
    </include>
    <include name="Object_FlatBackground">
        <control type="image">
            <include condition="Skin.HasSetting(global.showdialogshadows) + !String.IsEqual(Skin.CurrentColourTheme,Light)">Object_Background_Shadows</include>
            <texture colordiffuse="PosterBorder">common/white.png</texture>
        </control>
    </include>
    <!-- Poster -->
    <include name="Object_FakeImage">
        <control type="image" id="6699">
            <width>1</width>
            <height>1</height>
            <animation effect="fade" start="0" end="0" condition="true">Conditional</animation>
            <texture background="true">$VAR[Image_Poster]</texture>
        </control>
    </include>
    <include name="Object_RightSide"><right>0</right></include>
    <include name="Object_LeftSide"><left>0</left></include>
    <include name="Object_Poster">
        <param name="flipx" default="true" />
        <definition>
            
            <control type="group">
                <include condition="$PARAM[flipx]">Object_RightSide</include>
                <include condition="!$PARAM[flipx]">Object_LeftSide</include>
                <width>$PARAM[width]</width>
                <height>posterh</height>
                <include>Object_Background</include>
                <control type="image">
                    <centerleft>50%</centerleft>
                    <centertop>50%</centertop>
                    <width>50%</width>
                    <height>50%</height>
                    <aspectratio>keep</aspectratio>
                    <fadetime>200</fadetime>
                    <texture background="true">$VAR[Image_Poster]</texture>
                    <visible>Window.IsVisible(MyVideoNav.xml) + Container.Content(genres) + System.HasAddon(resource.images.moviegenreicons.transparent)</visible>
                </control>
                <control type="group">
                    <visible>!Window.IsVisible(MyVideoNav.xml) | !Container.Content(genres) | !System.HasAddon(resource.images.moviegenreicons.transparent)</visible>
                    <control type="image">
                        <width>100%</width>
                        <height>100%</height>
                        <aspectratio>center</aspectratio>
                        <fadetime>200</fadetime>
                        <texture background="true">$VAR[Image_Poster]</texture>
                        <visible>String.StartsWith(Control.GetLabel(6699),Default)</visible>
                    </control>
                    <control type="image">
                        <width>100%</width>
                        <height>100%</height>
                        <aspectratio>keep</aspectratio>
                        <fadetime>200</fadetime>
                        <texture background="true">$VAR[Image_Poster]</texture>
                        <visible>!String.StartsWith(Control.GetLabel(6699),Default) + !String.IsEqual(Control.GetLabel(6699),ListItem.Art(tvshow.poster)) + !String.IsEqual(Control.GetLabel(6699),ListItem.Art(poster)) + !String.IsEqual(Control.GetLabel(6699),ListItem.Art(season.poster))</visible>
                    </control>
                    <control type="image">
                        <width>100%</width>
                        <height>100%</height>
                        <aspectratio>stretch</aspectratio>
                        <fadetime>200</fadetime>
                        <texture background="true">$VAR[Image_Poster]</texture>
                        <visible>!String.StartsWith(Control.GetLabel(6699),Default) + [String.IsEqual(Control.GetLabel(6699),ListItem.Art(tvshow.poster)) | String.IsEqual(Control.GetLabel(6699),ListItem.Art(poster)) | String.IsEqual(Control.GetLabel(6699),ListItem.Art(season.poster))] + !String.IsEmpty(Control.GetLabel(6699))</visible>
                    </control>
                    
                </control>
            </control>

        </definition>
    </include>

    <!-- Thumb Info -->
    <include name="Object_ExtraInfo_Textbox">
        <control type="group">
            <width>100%</width>
            <top>425</top>
            <include>Object_Background</include>
            <control type="grouplist">
                <usecontrolcoords>true</usecontrolcoords>
                <itemgap>15</itemgap>
                <orientation>vertical</orientation>
                <left>pad</left>
                <right>pad</right>
                <top>pad</top>
                <bottom>pad</bottom>
                <include>Object_ExtraInfo_Content</include>
            </control>
        </control>
    </include>
    <include name="Object_ExtraInfo">
        <definition>
            <control type="group">
                <include condition="Skin.HasSetting(SwitchSides)">Defs_LeftSide</include>
                <include condition="!Skin.HasSetting(SwitchSides)">Defs_RightSide</include>
                <width>720</width>
                <height>posterh</height>
                <control type="group">
                    <width>100%</width>
                    <height>405</height>
                    <include>Object_Background</include>
                    <control type="image">
                        <texture colordiffuse="FF000000">common/white.png</texture>
                    </control>
                    <control type="image">
                        <aspectratio>keep</aspectratio>
                        <fadetime>200</fadetime>
                        <texture background="true">$VAR[Image_Thumb]</texture>
                    </control>
                </control>
                <include>Object_ExtraInfo_Textbox</include>
            </control>
        </definition>
    </include>

    <include name="Object_ExtraInfo2">
        <definition>
            <control type="group">
                <include condition="Skin.HasSetting(SwitchSides)">Defs_LeftSide</include>
                <include condition="!Skin.HasSetting(SwitchSides)">Defs_RightSide</include>
                <width>1010</width>
                <height>posterh</height>
                <control type="group">
                    <right>0</right>
                    <width>720</width>
                    <height>405</height>
                    <include>Object_Background</include>
                    <control type="image">
                        <texture colordiffuse="FF000000">common/white.png</texture>
                    </control>
                    <control type="image">
                        <aspectratio>keep</aspectratio>
                        <fadetime>200</fadetime>
                        <texture background="true">$VAR[Image_Thumb]</texture>
                    </control>
                </control>
                <control type="group">
                    <right>740</right>
                    <width>270</width>
                    <height>405</height>
                    <include>Object_Background</include>
                    <control type="image">
                        <aspectratio>scale</aspectratio>
                        <fadetime>200</fadetime>
                        <texture background="true">$VAR[Image_Poster]</texture>
                    </control>
                </control>
                <include>Object_ExtraInfo_Textbox</include>
            </control>
        </definition>
    </include>

    <include name="Object_ExtraInfo_Content">
        <control type="label">
            <top>pad</top>
            <left>pad</left>
            <right>pad</right>
            <height>36</height>
            <font>Font-InfoBox-Title</font>
            <label>$VAR[Label_Title]</label>
        </control>
        <control type="label">
            <left>pad</left>
            <right>pad</right>
            <height>24</height>
            <textcolor>$VAR[HighlightColor2]</textcolor>
            <font>Font-ListInfo-Small-Bold</font>
            <label>$VAR[Label_GenreLine,[UPPERCASE],[/UPPERCASE]]</label>
        </control>
        <control type="textbox">
            <left>pad</left>
            <right>pad</right>
            <height>158</height>
            <font>Font-ListInfo</font>
            <align>left</align>
            <label fallback="31092">$VAR[Label_Plot]</label>
            <visible>Skin.HasSetting(furniture.showflags) + Skin.HasSetting(furniture.flags.extradetail)</visible>
        </control>
        <control type="textbox">
            <left>pad</left>
            <right>pad</right>
            <height>120</height>
            <font>Font-ListInfo</font>
            <align>left</align>
            <label fallback="31092">$VAR[Label_Plot]</label>
            <visible>!Skin.HasSetting(furniture.showflags) | !Skin.HasSetting(furniture.flags.extradetail)</visible>
        </control>
        <control type="label">
            <left>pad</left>
            <right>pad</right>
            <height>20</height>
            <align>right</align>
            <font>Font-ListInfo-Small-Bold</font>
            <visible>!Skin.HasSetting(furniture.showflags) | !Skin.HasSetting(furniture.flags.extradetail)</visible>
            <label fallback="31203">$VAR[Label_ExtraInfo_Icons]</label>
        </control>
    </include>

    <include name="Object_BigFanart">
        <param name="fadetime" default="200" />
        <definition>
            <control type="group">
                <top>0</top>
                <include condition="Skin.HasSetting(SwitchSides)">Defs_LeftSide</include>
                <include condition="!Skin.HasSetting(SwitchSides)">Defs_RightSide</include>
                <height>posterh</height>
                <width>1280</width>
                <include>Object_Background</include>
                <control type="image">
                    <texture colordiffuse="FF000000">common/white.png</texture>
                </control>
                <control type="image">
                    <fadetime>$PARAM[fadetime]</fadetime>
                    <aspectratio>keep</aspectratio>
                    <texture background="true">$VAR[Image_Thumb]</texture>
                </control>
                <control type="image">
                    <right>bigpad</right>
                    <top>bigpad</top>
                    <height>32</height>
                    <width>32</width>
                    <texture colordiffuse="ListLabel">$VAR[Image_Indicator]</texture>
                    <visible>!String.IsEmpty(ListItem.Overlay)</visible>
                </control>
                <control type="group">
                    <left>0</left>
                    <right>0</right>
                    <bottom>0</bottom>
                    <height>216</height>
                    <control type="image">
                        <texture colordiffuse="ListBG">common/white.png</texture>
                    </control>
                    <control type="grouplist">
                        <usecontrolcoords>true</usecontrolcoords>
                        <itemgap>15</itemgap>
                        <orientation>vertical</orientation>
                        <left>bigpad</left>
                        <right>bigpad</right>
                        <top>14</top>
                        <control type="label">
                            <top>pad</top>
                            <left>pad</left>
                            <right>pad</right>
                            <height>36</height>
                            <font>Font-InfoBox-Title</font>
                            <label>$VAR[Label_Title]</label>
                        </control>
                        <control type="label">
                            <top>-36</top>
                            <left>pad</left>
                            <right>pad</right>
                            <height>20</height>
                            <align>right</align>
                            <font>Font-ListInfo-Small-Bold</font>
                            <label>$VAR[Label_ExtraInfo_Icons]</label>
                            <visible>!Skin.HasSetting(furniture.showflags) | !Skin.HasSetting(furniture.flags.extradetail)</visible>
                        </control>
                        <control type="label">
                            <left>pad</left>
                            <right>pad</right>
                            <height>24</height>
                            <textcolor>$VAR[HighlightColor2]</textcolor>
                            <font>Font-ListInfo-Small-Bold</font>
                            <label>$VAR[Label_GenreLine,[UPPERCASE],[/UPPERCASE]]</label>
                        </control>
                        <control type="textbox">
                            <left>pad</left>
                            <right>pad</right>
                            <height>84</height>
                            <font>Font-ListInfo</font>
                            <align>left</align>
                            <label>$VAR[Label_Plot]</label>
                        </control>

                    </control>
                </control>
            </control>
        </definition>
    </include>

    <!-- Line -->
    <include name="Object_Line">
        <control type="grouplist">
            <visible>!Skin.HasSetting(furniture.hidesortinfo)</visible>
            <orientation>horizontal</orientation>
            <top>-45</top>
            <height>48</height>
            <width>$PARAM[width]</width>
            <usecontrolcoords>true</usecontrolcoords>
            <control type="label">
                <left>0</left>
                <height>100%</height>
                <width max="$PARAM[width]">auto</width>
                <label fallback="19033">$PARAM[label]</label>
                <font>Font-LineLabel</font>
                <textcolor>LineLabel</textcolor>
            </control>
            <control type="image">
                <bottom>21</bottom>
                <width max="$PARAM[width]">$PARAM[width]</width>
                <height>2</height>
                <texture colordiffuse="PosterBorder">common/white.png</texture>
            </control>
        </control>
    </include>
    <include name="Object_Headline">
        <control type="group">
            <left>bigpad</left>
            <right>bigpad</right>
            <top>bigpad</top>
            <include content="Object_Line">
                <param name="label" value="$PARAM[label]" />
                <param name="width" value="headlinew" />
            </include>
        </control>
    </include>

</includes>